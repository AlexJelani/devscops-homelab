services:
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      # Configure Gitea for subpath access. The IP address is sourced from the .env file (HUB_IP_ADDRESS).
      - GITEA__server__ROOT_URL=http://${HUB_IP_ADDRESS:-your_hub_ip}/gitea/
      - GITEA__database__DB_TYPE=sqlite3
    volumes:
      - gitea_data:/data
    ports:
      - "3000:3000"
      - "222:22"
    networks:
      - devsecops
  defectdojo:
    image: defectdojo/defectdojo-django:latest
    container_name: defectdojo
    ports:
      - "8082:8000"
    environment:
      - DD_DATABASE_URL=postgres://defectdojo:defectdojo@defectdojo-db:5432/defectdojo
      - DD_SECRET_KEY=dsbhub-defectdojo-2024-homelab-super-secret-key-change-me-123456789
      - DD_DEBUG=False
      - DD_ALLOWED_HOSTS=*
      - DD_CELERY_BROKER_URL=redis://defectdojo-redis:6379/0
      - DD_UWSGI_PORT=3031 # Configure uWSGI to listen on port 3031
      - DD_CELERY_RESULT_BACKEND=redis://defectdojo-redis:6379/0
      - DD_INITIALIZE=true
      - DD_ADMIN_USER=admin
      - DD_ADMIN_MAIL=admin@defectdojo.local
      - DD_ADMIN_PASSWORD=admin
      - DD_ADMIN_FIRST_NAME=Administrator
      - DD_ADMIN_LAST_NAME=User
    volumes:
      - defectdojo_media:/app/media
    networks:
      - devsecops
    depends_on:
      - defectdojo-db
      - defectdojo-redis


    restart: unless-stopped
  defectdojo-celery:
    image: defectdojo/defectdojo-django:latest
    container_name: defectdojo-celery
    command: /entrypoint-celery-worker.sh
    environment:
      - DD_DATABASE_URL=postgres://defectdojo:defectdojo@defectdojo-db:5432/defectdojo
      - DD_SECRET_KEY=dsbhub-defectdojo-2024-homelab-super-secret-key-change-me-123456789
      - DD_CELERY_BROKER_URL=redis://defectdojo-redis:6379/0
      - DD_CELERY_RESULT_BACKEND=redis://defectdojo-redis:6379/0
    volumes:
      - defectdojo_media:/app/media
    networks:
      - devsecops
    depends_on:
      - defectdojo-db
      - defectdojo-redis
    restart: unless-stopped

  defectdojo-celery-beat:
    image: defectdojo/defectdojo-django:latest
    container_name: defectdojo-celery-beat
    command: /entrypoint-celery-beat.sh
    environment:
      - DD_DATABASE_URL=postgres://defectdojo:defectdojo@defectdojo-db:5432/defectdojo
      - DD_SECRET_KEY=dsbhub-defectdojo-2024-homelab-super-secret-key-change-me-123456789
      - DD_CELERY_BROKER_URL=redis://defectdojo-redis:6379/0
      - DD_CELERY_RESULT_BACKEND=redis://defectdojo-redis:6379/0
    volumes:
      - defectdojo_media:/app/media
    networks:
      - devsecops
    depends_on:
      - defectdojo-db
      - defectdojo-redis
    restart: unless-stopped

  defectdojo-db:
    image: postgres:13
    container_name: defectdojo-db
    environment:
      - POSTGRES_DB=defectdojo
      - POSTGRES_USER=defectdojo
      - POSTGRES_PASSWORD=defectdojo
    volumes:
      - defectdojo_db_data:/var/lib/postgresql/data
    networks:
      - devsecops
    restart: unless-stopped

  defectdojo-redis:
    image: redis:7.2-alpine
    container_name: defectdojo-redis
    volumes:
      - defectdojo_redis_data:/data
    networks:
      - devsecops
    restart: unless-stopped

  defectdojo-nginx:
    image: defectdojo/defectdojo-nginx:latest
    container_name: defectdojo-nginx
    ports:
      - "8083:8080"
    environment:
      - NGINX_METRICS_ENABLED=false
      - UWSGI_HOST=defectdojo  # Use the service name instead of "uwsgi"
      - UWSGI_PORT=3031
    volumes:
      - defectdojo_media:/usr/share/nginx/html/media
    networks:
      - devsecops
    depends_on:
      - defectdojo
    restart: unless-stopped


  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    environment: # Add environment section for Jenkins
      - JENKINS_OPTS=--prefix=/jenkins # Configure Jenkins for /jenkins subpath
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - devsecops

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_WEB_CONTEXT=/sonarqube # Configure SonarQube for /sonarqube subpath
      # Disable Elasticsearch bootstrap checks for development/testing if memory is constrained.
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - devsecops

  sonarqube-db:
    image: postgres:13
    container_name: sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    networks:
      - devsecops

  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus
    # If you encounter "exec format error" on your ARM64 dsb-hub, uncomment the line below.
    platform: linux/arm64
    # Note: Nexus subpath configuration is more complex and usually involves editing nexus.properties or setting specific Java opts.
    volumes:
      - nexus_data:/nexus-data
    ports:
      - "8081:8081"
    networks:
      - devsecops

  nginx:
    image: nginx:latest
    container_name: nginx_hub
    ports:
      - "80:80"
      # - "443:443" # Optionally, if you set up SSL
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/ssl:/etc/nginx/ssl:ro # Optionally, for SSL certificates
    depends_on:
      - gitea
      - jenkins
      - sonarqube
      - nexus
      - defectdojo-nginx
    networks:
      - devsecops
    restart: unless-stopped

  trivy:
    image: aquasec/trivy:latest
    container_name: trivy
    command: server --listen 0.0.0.0:8080
    ports:
      - "8084:8080" # Expose Trivy server on 8084 (host) to 8080 (container)
    volumes:
      - trivy_cache:/root/.cache
    networks:
      - devsecops
    restart: unless-stopped

networks:
  devsecops:
    driver: bridge

volumes:
  gitea_data:
  jenkins_home:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_db:
  nexus_data:
  defectdojo_db_data:
  defectdojo_media:
  defectdojo_redis_data:
  trivy_cache:  # Add Trivy cache volume